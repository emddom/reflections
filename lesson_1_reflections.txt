How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Made it much faster, because I had to look only at the changed lines.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Find bugs, but also see how the structure has changed.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: that I don't forget to commit. Cons: too many versions. However, this can be helped with named versions.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git allows multiple changes, because you have to touch multiple files when implementing a feature, for example.
	Git also knows what belongs together, Google Docs doesn't.

How can you use the commands git log and git diff to view the history of files?

    git diff shows what lines have changed, git log shows messages of commits

How might using version control make you more confident to make changes that
could break something?

    Because I can return to an earlier (working) version easily

Now that you have your workspace set up, what do you want to try using Git for?

    First only for following the exercises, then for something real
